# Полиморфизм в коде — это когда определённая часть кода
# (чаще всего функция) может обрабатывать объекты разных классов,
# меняя поведение в зависимости от класса.

# Нам необходимо рассчитать площадь геометрической
# фигуры на основе полиморфизма:

class Rectangle:
    def __init__(self,a,b):
        self.a = a
        self.b = b
    def get_area(self):
        return self.a * self.b

# Итак, у нас есть класс Rectangle с двумя параметрами:
# ширина и высота (a и b). Мы можем найти площадь прямоугольника.
# Для этого нужно длину умножить на высоту.
# Для решения используем специальный метод get_area.
# Он принимает аргумент self, то есть сам класс Rectangle и
# возвращает произведение атрибута a (ширина) на b (высота).

# Создадим файл rectangle_2.py в отдельной директории в папке
# Выполним импорт класса Rectangle

# Добавим в нашу программу ещё один объект, например,
# Square (квадрат), который принимает в качестве
# аргументов одну сторону. Добавляем данные
# в исходном файле rectangle.py:

class Square:
    def __init__(self,a):
        self.a = a
    def get_area_square(self):
        return self.a ** 2  # возведение в степень **2 (в квадрат)

# Переходим в файл rectangle_2.py и импортируем наш новый объект: