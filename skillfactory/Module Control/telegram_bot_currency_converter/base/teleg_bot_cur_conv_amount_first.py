import telebot  # –≤—ã–±—Ä–∞–ª –µ–≥–æ, —Ç–∞–∫ –∫–∞–∫ —É–∂–µ —Ä–∞–Ω–µ–µ —Ä–∞–±–æ—Ç–∞–ª –∏ –º–Ω–µ —Å –Ω–∏–º —É–¥–æ–±–Ω–µ–µ
from telebot import types  # –Ω—É–∂–µ–Ω –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –æ–±—Ä–∞—â–∞—Ç—å—Å—è –Ω–∞–ø—Ä—è–º—É—é –±–µ–∑ telebot.types
from currency_converter import CurrencyConverter  # https://pypi.org/project/CurrencyConverter/

bot = telebot.TeleBot('6477563848:AAHS2OiKnKFPadIl-ThW5Q0xzzfrSXmkeq0')  # API
currency = CurrencyConverter()  # –ø–æ–¥–∫–ª—é—á–∞–µ–º –≤ —Ä–∞–±–æ—Ç—É –±–∏–±–ª–∏–æ—Ç–µ–∫—É –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä–∞
amount = 0  # –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ

@bot.message_handler(commands=['start'])  # –ø—Ä–∏ –≤–≤–æ–¥–µ /start, –∑–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é start
def start(message):
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É')
    bot.register_next_step_handler(message, input_amount)

def input_amount(message):
    global amount
    try:
        amount = int(message.text.strip())
    except ValueError:
        bot.send_message(message.chat.id, 'i_a: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ')
        bot.register_next_step_handler(message, input_amount)
        return

    if amount > 0:
        markup = types.InlineKeyboardMarkup(row_width=2)
        btn1 = types.InlineKeyboardButton('üí∂EUR/USDüíµ', callback_data='eur/usd')
        btn2 = types.InlineKeyboardButton('üíµUSD/EURüí∂', callback_data='usd/eur')
        btn3 = types.InlineKeyboardButton('üí∂EUR/GBPüá¨üáß', callback_data='eur/gbp')
        btn4 = types.InlineKeyboardButton('‚ùì–î—Ä—É–≥–∞—è‚ùì', callback_data='other')
        btn5 = types.InlineKeyboardButton('üåê–í–∞—Ä–∏–∞–Ω—Ç—ã –í–∞–ª—é—Çüåê', callback_data='options')
        markup.add(btn1, btn2, btn3, btn4, btn5)  # 5 –∫–Ω–æ–ø–æ–∫ –ø–æ (row_width=2)

        bot.send_message(message.chat.id, 'ü§ó *** –î–û–ë–†–û –ü–û–ñ–ê–õ–û–í–ê–¢–¨ *** ü§ó')
        bot.send_message(message.chat.id, 'üè¶–í–ê–õ–Æ–¢–ù–´–ô –ë–û–¢ –ö–û–ù–í–ï–†–¢–ï–†üè¶')
        bot.send_message(message.chat.id, '‚ô¶Ô∏èÔ∏è‚ô¶Ô∏è‚ô¶Ô∏èÔ∏èÔ∏èÔ∏èÔ∏èÔ∏èÔ∏è–ù–ê–®–ï –ú–ï–ù–Æ‚ô¶Ô∏èÔ∏èÔ∏è‚ô¶Ô∏èÔ∏è‚ô¶Ô∏è')
        bot.send_message(message.chat.id, 'üëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëá', reply_markup=markup)
        bot.send_message(message.chat.id, f'–í—ã —Ö–æ—Ç–∏—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å {amount} –µ–¥–∏–Ω–∏—Ü(—É)')
    else:
        bot.send_message(message.chat.id, '–ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ "0"')
        bot.register_next_step_handler(message, input_amount)


@bot.callback_query_handler(func=lambda call: True)
def callback(call):  # –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç—ã—Ö –∫–Ω–æ–ø–æ–∫
    # —Ç–∞–∫ –∫–∞–∫ —É–∂–µ –≤–≤—ë–ª –∑–Ω–∞—á–µ–Ω–∏–µ, —Ç–æ
    if call.data != 'other' and call.data != 'options':  # –µ—Å–ª–∏ call.data –Ω–µ –∫–Ω–æ–ø–∫–∏ '–î—Ä—É–≥–∞—è' –∏ '–í–∞—Ä–∏–∞–Ω—Ç—ã –í–∞–ª—é—Ç', —Ç–æ
        values = call.data.upper().split('/')  # –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ '/' –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
        result = currency.convert(amount, values[0], values[1])  # –≤—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç (–∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞ value 0 –∏ 1
        bot.send_message(call.message.chat.id, f'Result {round(result, 2)}')  # –≤—ã–¥–∞—ë–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç

    elif call.data == 'other':
        bot.send_message(call.message.chat.id, '[–≤–∞–ª—é—Ç–∞1]/[–≤–∞–ª—é—Ç–∞2]')
        bot.register_next_step_handler(call.message, my_currency)  # –≤–≤–æ–¥–∏–º –∂–µ–ª–∞–µ–º—ã–π —Ç–∏–ø –≤–∞–ª—é—Ç—ã

    elif call.data == 'options':
        bot.send_message(call.message.chat.id, '–í–∞—Ä–∏–∞–Ω—Ç—ã –≤–∞–ª—é—Ç:')
        bot.send_message(call.message.chat.id, '1. EUR/PLN –ø–æ–ª—å—Å–∫–∞—è –∑–ª–æ—Ç–∞')
        bot.send_message(call.message.chat.id, '2. EUR/SEK —à–≤–µ–¥—Å–∫–∞—è –∫—Ä–æ–Ω–∞')
        bot.send_message(call.message.chat.id, '3. EUR/TRY —Ç—É—Ä–µ—Ü–∫–∞—è –ª–∏—Ä–∞')

def my_currency(message):  # –∂–µ–ª–∞–µ–º–∞—è –≤–∞–ª—é—Ç–∞
    try:
        values = message.text.upper().split('/')  # –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ '/' –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –ø—Ä–∏ –ø–æ–º–æ—â–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞ message text
        result = currency.convert(amount, values[0], values[1])
        bot.send_message(message.chat.id, f'Result {round(result, 2)}')
    except Exception:
        bot.send_message(message.chat.id, 'my_curr: –ù–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä—É –∑–∞–Ω–æ–≤–æ')
        bot.register_next_step_handler(message, my_currency)  # –≤–≤–æ–¥–∏–º –∂–µ–ª–∞–µ–º—ã–π —Ç–∏–ø –≤–∞–ª—é—Ç—ã

def second_menu(message):
    markup = types.InlineKeyboardMarkup(row_width=2)
    btn1 = types.InlineKeyboardButton('üí∂EUR/USDüíµ', callback_data='eur/usd')
    btn2 = types.InlineKeyboardButton('üíµUSD/EURüí∂', callback_data='usd/eur')
    btn3 = types.InlineKeyboardButton('üí∂EUR/GBPüá¨üáß', callback_data='eur/gbp')
    btn4 = types.InlineKeyboardButton('‚ùì–î—Ä—É–≥–∞—è‚ùì', callback_data='other')
    btn5 = types.InlineKeyboardButton('üåê–í–∞—Ä–∏–∞–Ω—Ç—ã –í–∞–ª—é—Çüåê', callback_data='options')
    markup.add(btn1, btn2, btn3, btn4, btn5)  # 5 –∫–Ω–æ–ø–æ–∫ –ø–æ (row_width=2)

    bot.send_message(message.chat.id, '–ú–ï–ù–Æ', reply_markup=markup)

#--------------------------------------------------------------------------------------

@bot.message_handler(func=lambda message: True)  # –æ–∂–∏–¥–∞–µ–º –ª—é–±–æ–π –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def text_handler(message):  # –æ–∂–∏–¥–∞–µ–º –ª—é–±—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    bot.send_message(message.chat.id, "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ú–ï–ù–Æ\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É --> /start")

bot.polling(none_stop=True)  # –±–µ—Å–ø–µ—Ä–µ–±–æ–π–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –±–æ—Ç–∞
