import telebot  # —è –≤—ã–±—Ä–∞–ª –µ–≥–æ —Ç–∞–∫ –∫–∞–∫ —É–∂–µ —Ä–∞–±–æ—Ç–∞–ª —Å –Ω–∏–º, –º–Ω–µ —Ç–∞–∫ —É–¥–æ–±–Ω–µ–µ
from telebot import types  # –º–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º
from currency_converter import CurrencyConverter  # https://pypi.org/project/CurrencyConverter/
import time

bot = telebot.TeleBot('6477563848:AAHS2OiKnKFPadIl-ThW5Q0xzzfrSXmkeq0')  # botfather —Ç–æ–∫–µ–Ω
currency = CurrencyConverter()  # –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
amount = 0  # –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–∞–ª—é—Ç–Ω–æ–π –µ–¥–∏–Ω–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è


@bot.message_handler(commands=['start'])  # –æ–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ /start
def start(message):
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É')
    bot.register_next_step_handler(message, input_amount)

def input_amount(message):  # –≤–≤–æ–¥ –≤–∞–ª—é—Ç—ã
    global amount
    try:
        amount = int(message.text.strip())
        bot.send_message(message.chat.id, f'–í—ã —Ö–æ—Ç–∏—Ç–µ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å {amount} –µ–¥–∏–Ω–∏—Ü')
    except ValueError:
        bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ 1')
        bot.register_next_step_handler(message, input_amount)
        return

    if amount > 0:
        markup = types.InlineKeyboardMarkup(row_width=2)
        btn1 = types.InlineKeyboardButton('üí∂EUR/USDüíµ', callback_data='eur/usd')
        btn2 = types.InlineKeyboardButton('üíµUSD/EURüí∂', callback_data='usd/eur')
        btn3 = types.InlineKeyboardButton('üí∂EUR/GBPüá¨üáß', callback_data='eur/gbp')
        btn4 = types.InlineKeyboardButton('‚ùì–î—Ä—É–≥–∞—è‚ùì', callback_data='other')
        btn5 = types.InlineKeyboardButton('-->–í–∞—Ä–∏–∞–Ω—Ç—ã –≤–∞–ª—é—Ç<--', callback_data='values')
        markup.add(btn1, btn2, btn3, btn4, btn5)  # 5 –∫–Ω–æ–ø–æ–∫ –ø–æ (row_width=2)

        bot.send_message(message.chat.id, 'ü§ó *** –î–û–ë–†–û –ü–û–ñ–ê–õ–û–í–ê–¢–¨ *** ü§ó')
        bot.send_message(message.chat.id, 'üè¶–í–ê–õ–Æ–¢–ù–´–ô –ë–û–¢ –ö–û–ù–í–ï–†–¢–ï–†üè¶')
        bot.send_message(message.chat.id, '‚ô¶Ô∏èÔ∏è‚ô¶Ô∏è‚ô¶Ô∏èÔ∏èÔ∏èÔ∏èÔ∏èÔ∏èÔ∏è–ù–ê–®–ï –ú–ï–ù–Æ‚ô¶Ô∏èÔ∏èÔ∏è‚ô¶Ô∏èÔ∏è‚ô¶Ô∏è')
        bot.send_message(message.chat.id, 'üëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëáüëá', reply_markup=markup)

        message: False  # –æ—Ç–∫–ª—é—á–∞–µ–º –≠–•–û –ø–æ—Å–ª–µ –≤—ã–≤–æ–¥–∞ –º–µ–Ω—é


def my_currency(message):
    try:
        values = message.text.upper().split('/')
        res = currency.convert(amount, values[0], values[1])
        bot.send_message(message.chat.id, f'–ò—Ç–æ–≥: {round(res, 2)} \n')
        bot.register_next_step_handler(message, input_amount)  # –æ–∂–∏–¥–∞–µ–º –≤–≤–æ–¥ –Ω–æ–≤–æ–π —Å—É–º–º—ã
    except Exception:
        bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ 2')
        bot.register_next_step_handler(message, my_currency)

@bot.callback_query_handler(func=lambda call: True)
# –æ–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ USD/EUR
def callback(call):
    time.sleep(0.5)
    values = call.data.upper().split('/')
    if len(values) >= 2:
        res = currency.convert(amount, values[0], values[1])
        bot.send_message(call.message.chat.id, f'–ò—Ç–æ–≥: {round(res, 2)} \n'
                                               f'–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Å—É–º–º—É')
        bot.register_next_step_handler(call.message, my_currency)

    elif call.data == 'other':
        bot.send_message(call.message.chat.id, '"–≤–∞–ª—é—Ç–∞1/–≤–∞–ª—é—Ç–∞2"')
        bot.register_next_step_handler(call.message, input_amount)

    elif call.data == 'values':
        bot.send_message(call.message.chat.id, 'Japan Yen üáØüáµ :  JPY\nTurkish Lir üáπüá≥ :  TRY')

    else:
        bot.send_message(call.message.chat.id, '–û—à–∏–±–∫–∞ 3')
        bot.register_next_step_handler(call.message, my_currency)  # –æ–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ USD/EUR


@bot.message_handler(func=lambda message: True)  # –æ–∂–∏–¥–∞–µ–º –ª—é–±–æ–π –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def echo_all(message):  # —Å–ª—É—à–∞–µ–º –ª—é–±—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    bot.send_message(message.chat.id, "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ú–ï–ù–Æ\n–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É --> /start")

bot.polling(none_stop=True, interval=1)  # –∑–∞–ø—É—Å–∫ —Ü–∏–∫–ª–∞ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞